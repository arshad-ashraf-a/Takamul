@using Takamul.Portal.Resources.Portal.ApplicationCategory;
@using Takamul.Portal.Resources.Controls.Buttons;
@using Takamul.Portal.Resources.Common;

<div class="col-lg-12">
    <div class="row">
        <div class="col-md-12">
            <div class="content-group-sm pull-right">
                <a title="@ApplicationCategoryResx.AddCategory" href="#" onclick="fnLoadPartialAddApplicationCategory();" class="btn btn-primary btn-xs"><i class="icon-add position-left"></i> @Buttons.Add</a>

            </div>
            <div class="clearfix"></div>
            <div class="row">
                <div class="fakeApplicationCategoryWidth col-md-12"></div>
                <div id="dvApplicationCategory">
                </div>
            </div>

        </div>
    </div>
</div>

<script type="text/javascript">
    var sGridViewApplicationCategory = "gridApplicationCategory-table";
    var sGridViewApplicationCategoryPager = "gridApplicationCategory-pager";

    function fnBindAllApplicationCategorys() {
        $("#dvApplicationCategory").hide();
        $("#dvApplicationCategory").empty();

        var tableApplicationCategory = document.createElement('table');
        tableApplicationCategory.id = sGridViewApplicationCategory;
        var pagerApplicationCategory = document.createElement('div');
        pagerApplicationCategory.id = sGridViewApplicationCategoryPager;

        $('#dvApplicationCategory').append(tableApplicationCategory);
        $('#dvApplicationCategory').append(pagerApplicationCategory);


        var ConstantsNames =
            {
                ID: 'ID',
                ApplicationCategoryName: 'CATEGORY_NAME'
            };
        var sCaption = '@ApplicationCategoryResx.ApplicationCategory';
        var oArrColumnNames = [
            '',//Hidden Columns Represent ID Int Value
            '@ApplicationCategoryResx.CategoryName',
            '' // Options
        ];

        var sBindDataUrl = '@Url.Action("JGetAllApplicationCategory", "ApplicationCategory")';

        var sAddUrl = "#";
        var sEditUrl = "#";
        var sDeleteUrl = "#";
        var oArrGridContextMenu = [
                                    { MenuTitle: "@Buttons.Options" },
                                    { Caption: "@Buttons.Edit", EventName: "fnLoadPartialEditApplicationCategory();", RowId: true },
                                    { Caption: "@Buttons.Delete", EventName: "fnDeleteApplicationCategory();", RowId: true },
        ];

        var oArrColsModel = [
                {
                    name: ConstantsNames.ID, editable: false,
                    key: true, hidden: true
                },
                {
                    name: ConstantsNames.ApplicationCategoryName,
                    width: 150, editable: false,
                    align: EnumColumnsAlignment.Center
                }
        ];

        RenderGridView(sCaption, oArrColumnNames, sBindDataUrl, '', '', '', oArrColsModel, oArrGridContextMenu, false, false, false, tableApplicationCategory.id, pagerApplicationCategory.id);
        $("#" + tableApplicationCategory.id).bind('jqGridLoadComplete.jqGrid', function (e, data) {
            $("#" + tableApplicationCategory.id).jqGrid('hideCol', 'cb'); //hide checkbox

            $(window).bind('resize', function () {
                $("#" + tableApplicationCategory.id).setGridWidth(Math.round($(".fakeApplicationCategoryWidth").width(), true));
            }).trigger('resize');


            $("#" + tableApplicationCategory.id).setGridWidth(Math.round($(".fakeWidthfakeApplicationCategoryWidth").width(), true)).trigger('resize');

            $("#dvApplicationCategory").show();

            HideLoader();
        });
    }

    function fnLoadPartialAddApplicationCategory() {
        $("#dvSystemPopUpWindow").dialog({
            title: '@ApplicationCategoryResx.AddCategory',
            autoOpen: true,
            width: '30%',
            resizable: false,
            modal: true,
            open: function () {
                $("#dvSystemPopUpWindowContainer").html("");
                $.ajax({
                    url: '@Url.Action("PartialAddApplicationCategory", "ApplicationCategory")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: {},
                    async: true,
                    success: function (response) {
                        $("#dvSystemPopUpWindowContainer").html(response);
                        fnApplicationCategoryValidateInitialization("frmAddApplicationCategory");
                    },
                    error: function (response) {
                        $("#dvSystemPopUpWindowContainer").html("");
                    }
                });
            },
            buttons: [
                 {
                     text: "@Buttons.Save",
                     "class": 'btn btn-sm bg-slate',
                     click: function () {
                         fnSaveApplicationCategory();
                     }
                 },
                 {
                     text: '@Buttons.Cancel',
                     "class": 'btn btn-sm btn-default',
                     click: function () {
                         $(this).dialog("close");
                     }
                 }
            ]
        });
    }

    function fnApplicationCategoryValidateInitialization(sFormID) {
        var validator = $('#' + sFormID).validate({
            errorElement: 'div',
            errorClass: 'validation-error-label',
            focusInvalid: true,
            ignore: "",
            rules: {
                CATEGORY_NAME: {
                    required: true
                }
            },
            messages: {
                CATEGORY_NAME: "@CommonResx.ThisFieldIsRequired"
            },
            highlight: function (e) {
                $(e).closest('.error-placement').removeClass('has-info').addClass('has-error');
            },
            success: function (e) {
                $(e).closest('.error-placement').removeClass('has-error');
                $(e).remove();
            },
            errorPlacement: function (error, element) {
                // Styled checkboxes, radios, bootstrap switch
                if (element.parents('div').hasClass("checker") || element.parents('div').hasClass("choice") || element.parent().hasClass('bootstrap-switch-container')) {
                    if (element.parents('label').hasClass('checkbox-inline') || element.parents('label').hasClass('radio-inline')) {
                        error.appendTo(element.parent().parent().parent().parent());
                    }
                    else {
                        error.appendTo(element.parent().parent().parent().parent().parent());
                    }
                }

                    // Unstyled checkboxes, radios
                else if (element.parents('div').hasClass('checkbox') || element.parents('div').hasClass('radio')) {
                    error.appendTo(element.parent().parent().parent());
                }

                    // Input with icons and Select2
                else if (element.parents('div').hasClass('has-feedback') || element.hasClass('select2-hidden-accessible')) {
                    error.appendTo(element.parent());
                }

                    // Inline checkboxes, radios
                else if (element.parents('label').hasClass('checkbox-inline') || element.parents('label').hasClass('radio-inline')) {
                    error.appendTo(element.parent().parent());
                }

                    // Input group, styled file input
                else if (element.parent().hasClass('uploader') || element.parents().hasClass('input-group')) {
                    error.appendTo(element.parent().parent());
                }

                else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
            },
            invalidHandler: function (form) {

            }
        });
    }

    function fnSaveApplicationCategory() {
        if (!$("#frmAddApplicationCategory").valid()) {
            return false;
        }
        var formData = $("#frmAddApplicationCategory").serialize();

        $.ajax({
            url: '@Url.Action("JSaveApplicationCategory", "ApplicationCategory")',
            type: "POST",
            data: formData,
            dataType: "json",
            success: function (result) {
                if (result.nResult == 1) {
                    ShowStatusBarNotification(result.sResultMessages, NotificationType.Success);
                    $("#dvSystemPopUpWindow").dialog("close");
                    $('#dvPopUpWindow').dialog({ 'height': 'auto'});
                    fnBindAllApplicationCategorys();
                }
                else if (result.nResult == -2) {
                    ShowStatusBarNotification(result.sResultMessages, NotificationType.Warning);
                    $("#dvSystemPopUpWindow").dialog("close");
                }
                else {
                    ShowStatusBarNotification(result.sResultMessages, NotificationType.Error);
                }


            },
            error: function () {

            }
        })
    }

    function fnLoadPartialEditApplicationCategory() {

        var gdApplicationCategory = $('#' + sGridViewApplicationCategory);
        var vApplicationCategoryID = gdApplicationCategory.jqGrid('getGridParam', 'selrow');
        var rowData = gdApplicationCategory.getRowData(vApplicationCategoryID);

        var sApplicationCategoryName = rowData.CATEGORY_NAME;

        var dataToSend = JSON.stringify({
            ID: vApplicationCategoryID,
            CATEGORY_NAME: sApplicationCategoryName
        });

        $("#dvSystemPopUpWindow").dialog({
            title: '@ApplicationCategoryResx.EditCategory',
            autoOpen: true,
            width: '30%',
            resizable: false,
            modal: true,
            open: function () {
                $("#dvSystemPopUpWindowContainer").html("");
                $.ajax({
                    url: '@Url.Action("PartialEditApplicationCategory", "ApplicationCategory")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: dataToSend,
                    async: true,
                    success: function (response) {
                        $("#dvSystemPopUpWindowContainer").html(response);
                        fnApplicationCategoryValidateInitialization("frmEditApplicationCategory");

                    },
                    error: function (response) {
                        $("#dvSystemPopUpWindowContainer").html("");
                    }
                });
            },
            buttons: [
                 {
                     text: "@Buttons.Update",
                     "class": 'btn btn-sm bg-slate',
                     click: function () {
                         fnEditApplicationCategory();
                     }
                 },
                 {
                     text: '@Buttons.Cancel',
                     "class": 'btn btn-sm btn-default',
                     click: function () {
                         $(this).dialog("close");
                     }
                 }
            ]
        });
    }


    function fnEditApplicationCategory() {
        if (!$("#frmEditApplicationCategory").valid()) {
            return false;
        }
        var formData = $("#frmEditApplicationCategory").serialize();

        $.ajax({
            url: '@Url.Action("JEditApplicationCategory", "ApplicationCategory")',
            type: "POST",
            data: formData,
            dataType: "json",
            success: function (result) {
                if (result.nResult == 1) {
                    ShowStatusBarNotification(result.sResultMessages, NotificationType.Success);
                    $("#dvSystemPopUpWindow").dialog("close");
                    fnBindAllApplicationCategorys();
                }
                else {
                    ShowStatusBarNotification(result.sResultMessages, NotificationType.Error);
                }


            },
            error: function () {

            }
        })
    }

    function fnDeleteApplicationCategory() {
        var gdApplicationCategory = $('#' + sGridViewApplicationCategory);
        var vApplicationCategoryID = gdApplicationCategory.jqGrid('getGridParam', 'selrow');

        $("#dvSystemPopUpWindow").dialog({
            title: '@ApplicationCategoryResx.DeleteCategory',
            autoOpen: true,
            width: '30%',
            resizable: false,
            modal: true,
            open: function () {
                var htmlToShow = "<label>@CommonResx.DeleteConfirmationMessage</label>"
                $("#dvSystemPopUpWindowContainer").html(htmlToShow);

            },
            buttons: [
                 {
                     text: "@Buttons.Delete",
                     "class": 'btn btn-sm bg-slate',
                     click: function () {
                         $.ajax({
                             url: '@Url.Action("JDeleteApplicationCategory", "ApplicationCategory")',
                             type: 'POST',
                             data: { ID: vApplicationCategoryID },
                             async: true,
                             success: function (result, response) {
                                 if (result.nResult == 1) {
                                     ShowStatusBarNotification(result.sResultMessages, NotificationType.Success);
                                     $("#dvSystemPopUpWindow").dialog("close");
                                     $('#dvPopUpWindow').dialog({ 'height': 'auto' });
                                     fnBindAllApplicationCategorys();
                                 }
                                 else {
                                     ShowStatusBarNotification(result.sResultMessages, NotificationType.Error);
                                 }
                             },
                             error: function (result, response) {
                                 ShowStatusBarNotification(result.sResultMessages, NotificationType.Error);
                             }
                         });
                     }
                 },
                 {
                     text: '@Buttons.Cancel',
                     "class": 'btn btn-sm btn-default',
                     click: function () {
                         $(this).dialog("close");
                     }
                 }
            ]
        });
    }

    //Entry Point
    $(document).ready(function () {
        fnBindAllApplicationCategorys();
    });
</script>
