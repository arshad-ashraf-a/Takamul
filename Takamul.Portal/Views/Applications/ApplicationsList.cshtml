@{
    Layout = "~/Views/Shared/_GridCommon.cshtml";
}
<div class="col-lg-12">
    <div class="row">
        <div class="col-md-12">
            <div class="form-horizontal" action="#" id="frmApplicationList">
                <div class="panel panel-flat">
                    <div class="panel-body">
                        <fieldset>
                            <legend class="text-semibold">
                                <i class="fa fa-search position-left"></i>
                                Search Application
                                <div class="content-group pull-right">

                                    <a class="control-arrow mt-10" data-toggle="collapse" data-target="#demo1" aria-expanded="true">
                                        <i class="icon-circle-down2"></i>
                                    </a>
                                </div>

                            </legend>
                            <div class="collapse in" id="demo1" aria-expanded="true">

                                <div class="col-md-12">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-lg-4 control-label">Application ID</label>
                                            <div class="col-lg-5">
                                                <input type="text" class="form-control col-xs-6" id="txtSearchByApplicationID" name="txtSearchByApplicationID"
                                                       placeholder="Application ID">
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-lg-4 control-label">Application Name</label>
                                            <div class="col-lg-8">
                                                <input type="text" class="form-control col-xs-6" id="txtSearchByApplicationName" name="txtSearchByApplicationName"
                                                       placeholder="Application Name">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <hr class="sp-1" />
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary btn-xs" onclick="fnBindAllApplications();">Seach<i class="fa fa-search position-right"></i></button>
                            <button type="submit" class="btn bg-slate-300 btn-xs" onclick="fnClearSearch();">Clear</button>
                        </div>
                        <div class="row search-option-buttons">
                            <div class="col-sm-6">

                            </div>

                            <div class="col-sm-6 text-right">
                                <ul class="list-inline no-margin-bottom">
                                    <li>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-white">
        <div class="panel-heading">
            <h6 class="panel-title"> &nbsp;</h6>
            <div class="heading-elements">
                <div class="col-md-12">
                    <div class="content-group-sm">
                        <a title="Add new application" href="#" onclick="fnLoadPartialAddApplication();" class="btn btn-primary btn-xs"><i class="icon-add position-left"></i> Add New Application</a>
                    </div>

                </div>
            </div>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="fakeWidth col-md-12"></div>
                <div id="dvApplications">
                </div>
            </div>
        </div>
    </div>

    
</div>

@section InlineScriptsRelated
{
    <script type="text/javascript">

        var sGridViewSelector = "grid-table";
        var sGridViewPagerSelector = "grid-pager";
        function fnBindAllApplications() {
            ShowLoader();
            $("#dvApplications").hide();
            $("#dvApplications").empty();
            var table = document.createElement('table');
            table.id = sGridViewSelector;
            var pager = document.createElement('div');
            pager.id = sGridViewPagerSelector;

            $('#dvApplications').append(table);
            $('#dvApplications').append(pager);

            var ConstantsNames =
                {
                    ID: 'ID',
                    ApplicationName: 'APPLICATION_NAME',
                    ApplicationLogoPath: 'APPLICATION_LOGO_PATH',
                    DefaultThemeColor: 'DEFAULT_THEME_COLOR',
                    ApplicationExpiryDate: 'APPLICATION_EXPIRY_DATE',
                    IsActive: 'IS_ACTIVE',
                    CreatedDate: 'CREATED_DATE',
                    MemberName: 'MemberName'
                };
            var sCaption = 'All Applications';
            var oArrColumnNames = [
                'Application Name',
                'App ID',//Hidden Columns Represent ID Int Value
                '',//Hidden Columns Represent APPLICATION_LOGO_PATH String Value
                'Member',
                'Application Expiry Date',
                'Is Active',
                'Created Date',
                'Options' // Options
            ];


            var vSearchByApplicationID = $("#txtSearchByApplicationID").val() == "" ? -99 : $("#txtSearchByApplicationID").val();
            var vSearchByApplicationName = $("#txtSearchByApplicationName").val();
            var params = {
                'nSearchByApplicationID': vSearchByApplicationID,
                'sSearchByApplicationName': vSearchByApplicationName

            };
            var sBindDataUrl = '@Url.Action("JBindAllApplications", "Applications")' + '?' + jQuery.param(params);

            var sAddUrl = "#";
            var sEditUrl = "#";
            var sDeleteUrl = "#";
            var oArrGridContextMenu = [
                                        { MenuTitle: "Options" },
                                        { Caption: "Details", EventName: "fnGoToApplicationDetais(-99);", RowId: true },
            ];
            var oArrColsModel = [
                {
                    name: ConstantsNames.ApplicationName,
                    width: 150, editable: false,
                    align: EnumColumnsAlignment.Center,
                    formatter: function (cellvalue, options, rowObject) {
                        return "<div class='text-semibold'><a onclick='fnGoToApplicationDetais(" + rowObject.ID + ")' href='#'>" + rowObject.APPLICATION_NAME + "</a></div>";
                    }
                },
                    {
                        name: ConstantsNames.ID, editable: false,
                        key: true,
                        align: EnumColumnsAlignment.Center,

                    },
                    {
                        name: ConstantsNames.ApplicationLogoPath, editable: false,
                        key: false, hidden: true
                    },

                     {
                         name: ConstantsNames.MemberName,
                         width: 150, editable: false,
                         align: EnumColumnsAlignment.Center
                     },
                    {
                        name: ConstantsNames.ApplicationExpiryDate,
                        width: 150, editable: false,
                        align: EnumColumnsAlignment.Center,
                        formatter: 'date', formatoptions: { srcformat: 'U', newformat: 'd/m/Y' }
                    },
                    {
                        name: ConstantsNames.IsActive,
                        width: 150, editable: false,
                        align: EnumColumnsAlignment.Center,
                        formatter: function (cellvalue, options, rowObject) {
                            var bIsActive = rowObject.IS_ACTIVE;
                            var htmlString = '';
                            if (bIsActive) {
                                htmlString += "<i class='icon-checkmark-circle text-success position-left'></i>";
                            }
                            else {
                                htmlString += "<i class='icon-cancel-circle2 text-warning position-left'></i>";
                            }
                            return htmlString;
                        }
                    },
                    {
                        name: ConstantsNames.CreatedDate,
                        width: 150, editable: false,
                        align: EnumColumnsAlignment.Center,
                        formatter: 'date', formatoptions: { srcformat: 'U', newformat: 'd/m/Y' }
                    }
            ];

            RenderGridView(sCaption, oArrColumnNames, sBindDataUrl, '', '', '', oArrColsModel, oArrGridContextMenu, false, false, false, table.id, pager.id, true, false, true);
            $("#" + table.id).bind('jqGridLoadComplete.jqGrid', function (e, data) {
                $("#" + table.id).jqGrid('hideCol', 'cb'); //hide checkbox

                $(window).bind('resize', function () {
                    $("#" + table.id).setGridWidth(Math.round($(".fakeWidth").width(), true));
                }).trigger('resize');


                $("#" + table.id).setGridWidth(Math.round($(".fakeWidth").width(), true)).trigger('resize');

                $("#dvApplications").show();
                HideLoader();
            });
        }

        function fnClearSearch() {
            $("#txtSearchByApplicationID").val("");
            $("#txtSearchByApplicationName").val("");
        }

        function fnGoToApplicationDetais(nApplicationID) {
            debugger;
            var vApplicationID = -99;
            if (nApplicationID != null && nApplicationID != undefined && nApplicationID != -99) {
                vApplicationID = nApplicationID;
            }
            else {
                var gdApplicationist = $('#' + sGridViewSelector);
                vApplicationID = gdApplicationist.jqGrid('getGridParam', 'selrow');
            }

            $.ajax({
                url: '@Url.Action("JSetCurrentApplicationID", "Applications")',
                type: 'POST',
                data: { nApplicationID: vApplicationID },
                async: true,
                success: function (result, response) {
                    if (result.nResult == 1) {
                        url = '@Url.Action("AppDashboard", "ApplicationDashboard")';
                        window.location.href = url;

                    }
                    else {
                        ShowStatusBarNotification(result.sResultMessages, NotificationType.Error);
                    }
                },
                error: function (result, response) {
                    ShowStatusBarNotification(result.sResultMessages, NotificationType.Error);
                }
            });


        }

        function fnLoadPartialAddApplication() {
            $("#dvPopUpWindow").dialog({
                title: 'Add Application',
                autoOpen: true,
                position: { my: "center", at: "top-50", of: $("#frmApplicationList") },
                width: '50%',
                resizable: false,
                modal: true,
                open: function () {
                    $("#dvPopUpWindowContainer").html("");
                    $.ajax({
                        url: '@Url.Action("PartialAddApplication", "Applications")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: {},
                        async: true,
                        success: function (response) {
                            $("#dvPopUpWindowContainer").html(response);
                            //fnAddTicketValidateInitialization("frmAddTicket");

                            // Month and year menu
                            $(".datepicker-menus").datepicker({
                                changeMonth: true,
                                changeYear: true,
                                dateFormat: 'dd/mm/yy'
                            });

                            // Default file input style
                            $(".file-styled").uniform({
                                fileButtonClass: 'action btn btn-default'
                            });

                        },
                        error: function (response) {
                            $("#dvPopUpWindowContainer").html("");
                        }
                    });


                },
                buttons: [
                     {
                         text: "Save",
                         "class": 'btn btn-sm bg-slate',
                         click: function () {
                             fnSaveApplication();
                         }
                     },
                     {
                         text: 'Cancel',
                         "class": 'btn btn-sm btn-default',
                         click: function () {
                             $(this).dialog("close");
                         }
                     }
                ]
            });
        }

        function fnSaveApplication() {
            var data = new FormData();
            var files = $("#fuAddApplicationLogo").get(0).files;

            if (files.length <= 0) {
                ShowStatusBarNotification("Please select file to upload.", NotificationType.Warning);
                return false;
            }

            var sizeAllowed = '@System.Configuration.ConfigurationManager.AppSettings["DefaultFileSize"]'; // 1024 kb
            var nUploadedSize = fnCheckFileSize('fuAddApplicationLogo');
            if (Number(nUploadedSize) > Number(sizeAllowed)) {
                ShowStatusBarNotification("Only allowed file size upto 1 MB.", NotificationType.Warning);
                return false;
            }

            var extension = $("#fuAddApplicationLogo").val().split('.').pop().toUpperCase();
            var bIsInValidExt = fnIsValidFileExtension(extension);
            if (bIsInValidExt) {
                ShowStatusBarNotification("Uploaded file is not a valid format.Only PNG,JPG,JPEG is allowed.", NotificationType.Warning);
                return false;
            }

            var formData = $("#frmAddApplication").serializeArray();
            data.append("ApplicationLogoFile", files[0]);
            $.each(formData, function (key, input) {
                    data.append(input.name, input.value);
            });
            debugger;
            $.ajax({
                url: '@Url.Action("JSaveApplication", "Applications")',
                type: "POST",
                processData: false,
                data: data,
                contentType: false,
                success: function (result, response) {
                    if (response != null || response != '') {
                        if (result.nResult == 1) {
                            ShowStatusBarNotification(result.sResultMessages, NotificationType.Success);
                            $("#dvPopUpWindow").dialog("close");
                        }
                        else {
                            ShowStatusBarNotification(result.sResultMessages, NotificationType.Error);
                        }
                    }
                    else {
                        ShowStatusBarNotification("General error occured.", NotificationType.Error);
                    }
                },
                error: function (er) { }

            });

        }

        function fnOnChangeApplicationLogoUploads() {
            var data = new FormData();
            var files = $("#fuAddApplicationLogo").get(0).files;

            if (files.length <= 0) {
                ShowStatusBarNotification("Please select file to upload.", NotificationType.Warning);
                return false;
            }

            var sizeAllowed = '@System.Configuration.ConfigurationManager.AppSettings["DefaultFileSize"]'; // 1024 kb
            var nUploadedSize = fnCheckFileSize('fuAddApplicationLogo');
            if (Number(nUploadedSize) > Number(sizeAllowed)) {
                ShowStatusBarNotification("Only allowed file size upto 1 MB.", NotificationType.Warning);
                return false;
            }

            var extension = $("#fuAddApplicationLogo").val().split('.').pop().toUpperCase();
            var bIsInValidExt = fnIsValidFileExtension(extension);
            if (bIsInValidExt) {
                ShowStatusBarNotification("Uploaded file is not a valid format.Only PNG,JPG,JPEG is allowed.", NotificationType.Warning);
                return false;
            }

            data.append("ApplicationLogoFile", files[0]);

            $.ajax({
                url: '@Url.Action("JSaveApplicationLogoToTemp", "Applications")',
                type: "POST",
                processData: false,
                data: data,
                dataType: 'json',
                contentType: false,
                success: function (result, response) {
                    if (response != null || response != '') {
                        if (result.nResult == 1) {
                            //ShowStatusBarNotification(result.sResultMessages, NotificationType.Success);

                        }
                        else {
                            ShowStatusBarNotification(result.sResultMessages, NotificationType.Error);
                        }
                    }
                    else {
                        ShowStatusBarNotification("General error occured.", NotificationType.Error);
                    }

                    $("#fuPreliminaryFile").val('');
                    $(".filename").text('')
                },
                error: function (er) { }

            });
            return false;
        }

        function fnIsValidFileExtension(sExtension) {
            var bIsInValidExt = false;
            if (sExtension != "PNG" && sExtension != "JPG" && sExtension != "JPEG") {
                bIsInValidExt = true;
            }
            return bIsInValidExt;
        }

        function fnCheckFileSize(fileid) {
            var fileSize = 0;
            try {
                fileSize = $("#" + fileid)[0].files[0].size //size in bytes
                fileSize = fileSize / 1024; //size in kb
            }
            catch (e) {
                fileSize = 0;
                console.log(ex);
            }
            return fileSize;
        }

        //Knockout ViewModel
        $(document).ready(function () {
            ViewModel = function () {
                var self = this;
                self.vmsApplicationLogoName = ko.observable('');
                self.vmsApplicationLogoPath = ko.observable('');
                return {
                    vmsApplicationLogoName: vmsApplicationLogoName,
                    vmsApplicationLogoPath: vmsApplicationLogoPath
                };
            }();
        });
        //EndKnockout ViewModel

        //Entry Point
        $(document).ready(function () {
            ko.applyBindings(ViewModel);
            fnBindAllApplications();
        });
    </script>
}