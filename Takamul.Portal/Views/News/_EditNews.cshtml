@using Takamul.Portal.Resources.Portal.News;
@using Takamul.Portal.Resources.Controls.Buttons;
@using Takamul.Portal.Resources.Common;
@using Infrastructure.Utilities
@using Infrastructure.Core
@{
    Layout = "~/Views/Shared/_AppLayout.cshtml";
}
@model Takamul.Models.ViewModel.NewsViewModel

@using (Html.BeginForm("", "", FormMethod.Post, new { id = "frmEditNews", @class = "form-horizontal" }))
{
    <div class="col-md-12">
        <div class="panel panel-white">
            <div class="panel-heading">
                <h6 class="panel-title"> @NewsResx.EditNews</h6>

            </div>
            <div class="panel-body">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.ID)

                @* News Title *@
                <div class="form-group">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="col-lg-4 control-label">@NewsResx.NewsTitle&nbsp;<span class="text-danger">*</span></label>
                            <div class="col-lg-8">
                                @Html.EditorFor(model => model.NEWS_TITLE, new { htmlAttributes = new { @class = "form-control", placeholder = @NewsResx.NewsTitle } })
                            </div>
                        </div>
                    </div>
                </div>

                @* News Content *@
                <div class="form-group">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="col-lg-4 control-label">@NewsResx.NewsContent&nbsp;<span class="text-danger">*</span></label>
                            <div class="col-lg-8">
                                <textarea class="form-control" rows="10" placeholder="news content" cols="5" id="NEWS_CONTENT" name="NEWS_CONTENT">@Model.NEWS_CONTENT</textarea>
                            </div>
                        </div>
                    </div>
                </div>

                @* Is Active *@
                <div class="form-group">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="col-lg-4 control-label">@NewsResx.IsActive</label>
                            <div class="col-lg-5">
                                @Html.CheckBox("IS_ACTIVE", Model.IS_ACTIVE, new { @class = "styled" })
                            </div>
                        </div>
                    </div>
                </div>

                @* Is Notify User *@
                <div class="form-group">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="col-lg-4 control-label">@NewsResx.IsNotifyUser</label>
                            <div class="col-lg-5">
                                @Html.CheckBox("IS_NOTIFY_USER", Model.IS_NOTIFY_USER, new { @class = "styled" })
                            </div>
                        </div>
                    </div>
                </div>

                @* Published Date *@
                <div class="form-group">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="col-lg-4 control-label">@NewsResx.PublishedDate</label>
                            <div class="col-lg-8">
                                <div class="col-lg-6 no-padding">
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="icon-calendar22"></i></span>
                                        @Html.EditorFor(model => model.FORMATTED_PUBLISHED_DATE, new { htmlAttributes = new { @class = "form-control datepicker-menus", @Value = (Model.PUBLISHED_DATE).ToString("dd/MM/yyyy"), placeholder = @NewsResx.PublishedDate } })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <input type="text" id="txtPublishedTime" data-format="HH:mm" data-template="HH : mm" name="datetime">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @* News Category *@
                <div class="form-group">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="col-lg-4 control-label">@NewsResx.NewsCategory</label>
                            <div class="col-lg-2">
                                <select class="form-control" id="ddlNewsCategory" name="ddlNewsCategory">
                                    <option></option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

                @* Youtube Link *@
                <div class="form-group">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="col-lg-4 control-label">@NewsResx.YoutubeLink&nbsp;</label>
                            <div class="col-lg-8">
                                @Html.EditorFor(model => model.YOUTUBE_LINK, new { htmlAttributes = new { @class = "form-control", placeholder = @NewsResx.YoutubeLink } })
                            </div>
                        </div>
                    </div>
                </div>

                @* News Image View *@
                <div class="form-group no-margin-bottom">
                    <div class="col-md-12">
                        <label class="col-lg-4 control-label">@NewsResx.UploadedNewsImage</label>
                        <div class="col-md-8">
                            <div class="panel panel-flat">
                                <div class="panel-body p-5">
                                    <ul class="media-list">
                                        <li class="media">
                                            @*<div class="media-left media-middle">
                                                <i class="icon-file-picture icon-2x text-muted"></i>
                                            </div>*@
                                            <div class="media-body valign-middle">
                                                <img height="100" width="100" src="@Url.Content(string.Format("{0}{1}",CommonHelper.sGetConfigKeyValue(ConstantNames.RemoteFileServerPath), @Model.NEWS_IMG_FILE_PATH))" alt="Image could not display" />
                                                @*<a href="#" onclick="fnDownloadFile(); return false;" class="media-heading text-semibold"> @System.IO.Path.GetFileName(Model.NEWS_IMG_FILE_PATH)</a>*@
                                            </div>
                                            <div class="media-right media-middle">
                                                <ul class="icons-list icons-list-extended text-nowrap">
                                                    <li><a href="#" onclick="fnDownloadFile(); return false;"><i class="icon-download"></i></a></li>
                                                </ul>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                @* News Image *@
                <div class="form-group">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="col-lg-4 control-label">@NewsResx.NewsImage</label>
                            <div class="col-lg-8">
                                <input type="file" id="fuNewsImage" class="file-styled">
                            </div>
                        </div>
                    </div>
                </div>


            </div>
        </div>
        <div class="clearfix"></div>
        <div class="col-md-12 text-center">
            <button type="submit" class="btn btn-primary btn-lg" onclick="fnEditNews()">@Buttons.Update</button>
            <button type="submit" class="btn bg-slate-300 btn-lg" onclick="fnClearControls(); return false;">@Buttons.Clear</button>
            <a href="@Url.Action("NewsList", "News")" class="btn bg-brown-300 btn-lg" return false;"><i class="fa fa-mail-reply-all position-left"></i>@Buttons.Back</a>
        </div>
    </div>
}
@section SpecificPluginScripts
{
    <script type="text/javascript" src="~/assets/js/plugins/forms/combodate.js"></script>
}

@section InlineScriptsRelated
{
    <script type="text/javascript">
        function fnFillApplicationCategory() {
            var oParameters = {};
            oParameters['bLanguageEnable'] = true;

            FillDropDownRoot('@Url.Action("JGetApplicationCategories", "ApplicationCategory")', 'POST', false, 'ddlNewsCategory', 'ID', 'CATEGORY_NAME', 'Select Category', ' ', oParameters,
              function () {
                  //Success Function
                  $("#ddlNewsCategory").select2({ width: '100%' });
                  $("#ddlNewsCategory").select2('val', String(@Model.NEWS_CATEGORY_ID));
              },
              function () {
                  //Error
              })
        }

        // Month and year menu
        $(".datepicker-menus").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'dd/mm/yy'
        });

        // Default file input style
        $(".file-styled").uniform({
            fileButtonClass: 'action btn btn-default'
        });

        function fnNewsValidateInitialization() {
            var validator = $('#frmEditNews').validate({
                errorElement: 'div',
                errorClass: 'validation-error-label',
                focusInvalid: true,
                ignore: "",
                rules: {
                    NEWS_TITLE: {
                        required: true
                    },
                    NEWS_CONTENT: {
                        required: true
                    },
                    FORMATTED_PUBLISHED_DATE: {
                        required: true
                    }
                },
                messages: {
                    NEWS_TITLE: "@CommonResx.ThisFieldIsRequired",
                    NEWS_CONTENT: "@CommonResx.ThisFieldIsRequired",
                    FORMATTED_PUBLISHED_DATE: "@CommonResx.ThisFieldIsRequired",
                },
                highlight: function (e) {
                    $(e).closest('.error-placement').removeClass('has-info').addClass('has-error');
                },
                success: function (e) {
                    $(e).closest('.error-placement').removeClass('has-error');
                    $(e).remove();
                },
                errorPlacement: function (error, element) {
                    // Styled checkboxes, radios, bootstrap switch
                    if (element.parents('div').hasClass("checker") || element.parents('div').hasClass("choice") || element.parent().hasClass('bootstrap-switch-container')) {
                        if (element.parents('label').hasClass('checkbox-inline') || element.parents('label').hasClass('radio-inline')) {
                            error.appendTo(element.parent().parent().parent().parent());
                        }
                        else {
                            error.appendTo(element.parent().parent().parent().parent().parent());
                        }
                    }

                        // Unstyled checkboxes, radios
                    else if (element.parents('div').hasClass('checkbox') || element.parents('div').hasClass('radio')) {
                        error.appendTo(element.parent().parent().parent());
                    }

                        // Input with icons and Select2
                    else if (element.parents('div').hasClass('has-feedback') || element.hasClass('select2-hidden-accessible')) {
                        error.appendTo(element.parent());
                    }

                        // Inline checkboxes, radios
                    else if (element.parents('label').hasClass('checkbox-inline') || element.parents('label').hasClass('radio-inline')) {
                        error.appendTo(element.parent().parent());
                    }

                        // Input group, styled file input
                    else if (element.parent().hasClass('uploader') || element.parents().hasClass('input-group')) {
                        error.appendTo(element.parent().parent());
                    }

                    else {
                        error.insertAfter(element);
                    }
                },
                submitHandler: function (form) {
                },
                invalidHandler: function (form) {

                }
            });
        }

        function fnIsValidFileExtension(sExtension) {
            var bIsInValidExt = false;
            if (sExtension != "PNG" && sExtension != "JPG" && sExtension != "JPEG") {
                bIsInValidExt = true;
            }
            return bIsInValidExt;
        }

        function fnCheckFileSize(fileid) {
            var fileSize = 0;
            try {
                fileSize = $("#" + fileid)[0].files[0].size //size in bytes
                fileSize = fileSize / 1024; //size in kb
            }
            catch (e) {
                fileSize = 0;
                console.log(ex);
            }
            return fileSize;
        }

        function fnEditNews() {
            if (!$("#frmEditNews").valid()) {
                return false;
            }

            var data = new FormData();
            var files = $("#fuNewsImage").get(0).files;

            if (files.length > 0) {

                var sizeAllowed = '@System.Configuration.ConfigurationManager.AppSettings["DefaultFileSize"]'; // 1024 kb
                var nUploadedSize = fnCheckFileSize('fuNewsImage');
                if (Number(nUploadedSize) > Number(sizeAllowed)) {
                    ShowStatusBarNotification("@NewsResx.AllowedFileSize", NotificationType.Warning);
                    return false;
                }

                var extension = $("#fuNewsImage").val().split('.').pop().toUpperCase();
                var bIsInValidExt = fnIsValidFileExtension(extension);
                if (bIsInValidExt) {
                    ShowStatusBarNotification("@NewsResx.InvalidFileFormats", NotificationType.Warning);
                    return false;
                }
            }

            var formData = $("#frmEditNews").serializeArray();
            data.append("NewsImage", files[0]);
            $.each(formData, function (key, input) {
                data.append(input.name, input.value);
            });

            data.append("PUBLISHED_TIME", $("#txtPublishedTime").combodate('getValue', 'HH:mm'));

            var nCategoryID = $('#ddlNewsCategory').val();
            if (nCategoryID != -99) {
                data.append("NEWS_CATEGORY_ID", nCategoryID);
            }

            $.ajax({
                url: '@Url.Action("JEditNews", "News")',
                type: "POST",
                processData: false,
                data: data,
                contentType: false,
                success: function (result, response) {
                    debugger;
                    if (result != null || result != '') {
                        if (result.nResult == 1) {
                            ShowStatusBarNotification(result.sResultMessages, NotificationType.Success);
                            //window.location.reload();
                        }
                        else {
                            ShowStatusBarNotification(result.sResultMessages, NotificationType.Error);
                        }
                    }
                    else {
                        ShowStatusBarNotification("@CommonResx.AnErrorHasBeenOccured", NotificationType.Error);
                    }
                },
                error: function (er) { }

            });
        }

        function fnClearControls() {
            $("#NEWS_TITLE").val("");
            $("#NEWS_CONTENT").val("");
            $(".filename").text("");
            $("#IS_ACTIVE").attr('checked', false);
            $("#IS_NOTIFY_USER").attr('checked', false);
            $("#YOUTUBE_LINK").val("");
        }

        function fnDownloadFile() {
            var sFileFullPath = '@Model.NEWS_IMG_FILE_PATH';
            window.location = '@Url.Action("DownloadFile", "Common")?sFileFullPath=' + sFileFullPath;
            return false;
        }

        //Entry Point
        $(document).ready(function () {

            fnFillApplicationCategory();
            fnNewsValidateInitialization();

            // Initialize
            $('#txtPublishedTime').combodate({
                firstItem: 'name', //show 'hour' and 'minute' string at first item of dropdown
                minuteStep: 1,
                value: new Date(Date.parse('@Model.PUBLISHED_DATE'))
            });
        });
    </script>
}


