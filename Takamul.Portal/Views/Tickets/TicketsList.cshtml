@using Takamul.Portal.Resources.Portal.Tickets;
@using Takamul.Portal.Resources.Controls.Buttons;
@using Takamul.Portal.Resources.Common;
@{
    Layout = "~/Views/Shared/_AppLayout.cshtml";
}

<div class="col-lg-12">

    <div class="row">
        <div class="col-md-12">
            <div class="form-horizontal" action="#" id="frmTicketList">
                <div class="panel panel-flat">
                    <div class="panel-body">
                        <fieldset>
                            <legend class="text-semibold no-padding-bottom">
                                <i class="fa fa-search position-left"></i>
                                @TicketsResx.SearchTickets
                                <div class="content-group pull-right">
                                    <a class="control-arrow mt-10" data-toggle="collapse" data-target="#demo1" aria-expanded="true">
                                        <i class="icon-circle-down2"></i>
                                    </a>
                                </div>
                            </legend>
                            <div class="collapse in" id="demo1" aria-expanded="true">
                                <div class="col-md-12">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-lg-4 control-label">@TicketsResx.TicketCode</label>
                                            <div class="col-lg-5">
                                                <input type="text" class="form-control col-xs-6" id="txtSearchByTicketCode" name="txtSearchByTicketCode"
                                                       placeholder="@TicketsResx.TicketCode">
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-lg-4 control-label">@TicketsResx.TicketName</label>
                                            <div class="col-lg-8">
                                                <input type="text" class="form-control col-xs-6" id="txtSearchByTicketName" name="txtSearchByTicketName"
                                                       placeholder="@TicketsResx.TicketName">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-lg-4 control-label">@TicketsResx.TicketStatus</label>
                                            <div class="col-lg-5">
                                                <select class="form-control" id="ddlTicketStatus" name="ddlTicketStatus">
                                                    <option></option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-lg-4 control-label">@TicketsResx.ParticipantUser</label>
                                            <div class="col-lg-8">
                                                <select class="form-control" id="ddlParticipantUser" name="ddlParticipantUser">
                                                    <option></option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <hr class="sp-1" />
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary btn-xs" onclick="fnBindAllTickets(); return false;">@Buttons.Search<i class="fa fa-search position-right"></i></button>
                            <button type="submit" class="btn bg-slate-300 btn-xs" onclick="fnClearSearch(); return false;">@Buttons.Clear</button>
                        </div>
                        <div class="row search-option-buttons">
                            <div class="col-sm-6">

                            </div>

                            <div class="col-sm-6 text-right">
                                <ul class="list-inline no-margin-bottom">
                                    <li>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-white">
        <div class="panel-heading">
            <h6 class="panel-title"> &nbsp;</h6>
            <div class="heading-elements">
                <div class="col-md-12">
                    <div class="content-group-sm">
                        <a title="@TicketsResx.AddNewTicket" href="#" onclick="fnLoadPartialAddTicket();" class="btn btn-primary btn-xs"><i class="icon-add position-left"></i> @TicketsResx.AddNewTicket</a>

                    </div>

                </div>
            </div>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="fakeWidth col-md-12"></div>
                <div id="dvTickets">
                </div>
            </div>
        </div>
    </div>
</div>

@section InlineScriptsRelated
{
    <script type="text/javascript">
        //Ticket status
        var enmTicketStatus = {
            Open: 1,
            Closed: 2,
            Rejected: 3
        }

        var sGridViewSelector = "grid-table";
        var sGridViewPagerSelector = "grid-pager";
        function fnBindAllTickets() {
            ShowLoader();
            $("#dvTickets").hide();
            $("#dvTickets").empty();
            var table = document.createElement('table');
            table.id = sGridViewSelector;
            var pager = document.createElement('div');
            pager.id = sGridViewPagerSelector;

            $('#dvTickets').append(table);
            $('#dvTickets').append(pager);

            var ConstantsNames =
                {
                    ID: 'ID',
                    TicketCode: 'TICKET_CODE',
                    TicketName: 'TICKET_NAME',
                    TicketDescription: 'TICKET_DESCRIPTION',
                    TicketStatusName: 'TICKET_STATUS_NAME',
                    TicketStatusID: 'TICKET_STATUS_ID',
                    TicketStatusRemark: 'TICKET_STATUS_REMARK',
                    IsActive: 'IS_ACTIVE',
                    DefaultImage: 'DEFAULT_IMAGE',
                    CreatedDate: 'CREATED_DATE'
                };
            var sCaption = '@TicketsResx.AllTickets';
            var oArrColumnNames = [
                '',//Hidden Columns Represent ID Int Value
                '',//Hidden Columns Represent TICKET_STATUS_ID Int Value
                '',//Hidden Columns Represent TICKET_CODE Int Value
                '',//Hidden Columns Represent IS_ACTIVE Int Value
                '',//Hidden Columns Represent TICKET_STATUS_REMARK Int Value
                '',//Hidden Columns Represent TICKET_STATUS_NAME Int Value
                '',//Hidden Columns Represent TICKET_DESCRIPTION Int Value
                '',//Hidden Columns Represent DEFAULT_IMAGE Int Value
                '@TicketsResx.TicketCode',
                '@TicketsResx.TicketName',
                //'Ticket Description',
                '@TicketsResx.TicketStatus',
                '@TicketsResx.IsActive',
                '@TicketsResx.CreatedDate',
                '@Buttons.Options' // Options
            ];

            var vTicketCode = $("#txtSearchByTicketCode").val();
            var vTicketName = $("#txtSearchByTicketName").val();
            var vTicketStatusId = Number($("#ddlTicketStatus").val());
            var vParticipantID = Number($("#ddlParticipantUser").val());
            var params = {
                'sTicketCode': vTicketCode,
                'sTicketName': vTicketName,
                'nTicketStatusId': vTicketStatusId,
                'nParticipantID': vParticipantID

            };
            var sBindDataUrl = '@Url.Action("JBindAllTickets", "Tickets")' + '?' + jQuery.param(params);

            var sAddUrl = "#";
            var sEditUrl = "#";
            var sDeleteUrl = "#";
            var oArrGridContextMenu = [
                                        { MenuTitle: "@Buttons.Options" },
                                        { Caption: "@TicketsResx.GoToChats", EventName: "fnGoToTicketDetails();", RowId: true },
                                        { Caption: "@TicketsResx.ChangeTicketStatus", EventName: "fnLoadPartialUpdateTicket();", RowId: true },
                                        { Caption: "@TicketsResx.ViewTicketInfo", EventName: "fnLoadPartialViewTicketInfo();", RowId: true },
            ];
            var oArrColsModel = [
                    {
                        name: ConstantsNames.ID, editable: false,
                        key: true, hidden: true
                    },
                    {
                        name: ConstantsNames.TicketStatusID, editable: false,
                        key: false, hidden: true
                    },
                     {
                         name: ConstantsNames.TicketCode, editable: false,
                         key: false, hidden: true
                     },
                       {
                           name: ConstantsNames.IsActive, editable: false,
                           key: false, hidden: true
                       },
                        {
                            name: ConstantsNames.TicketStatusRemark, editable: false,
                            key: false, hidden: true
                        },
                      {
                          name: ConstantsNames.TicketStatusName, editable: false,
                          key: false, hidden: true
                      },
                       {
                           name: ConstantsNames.TicketDescription, editable: false,
                           key: false, hidden: true
                       },
                      {
                          name: ConstantsNames.DefaultImage, editable: false,
                          key: false, hidden: true
                      },
                     {
                         width: 50, editable: false,
                         align: EnumColumnsAlignment.Center,
                         formatter: function (cellvalue, options, rowObject) {
                             return "<div class='text-semibold'><a onclick='fnGoToTicketDetails(" + rowObject.ID + ")' href='#'>" + rowObject.TICKET_CODE + "</a></div>";
                         }
                     },
                    {
                        name: ConstantsNames.TicketName,
                        width: 100, editable: false,
                        align: EnumColumnsAlignment.Center
                    },
                    //{
                    //    name: ConstantsNames.TicketDescription,
                    //    width: 150, editable: false,
                    //    align: EnumColumnsAlignment.Center
                    //},
                    {
                        width: 80, editable: false,
                        align: EnumColumnsAlignment.Center,
                        formatter: function (cellvalue, options, rowObject) {
                            var htmlString = '';
                            if (cellvalue != null) {
                                htmlString += cellvalue;
                            }
                            htmlString += "<div class='media-body'>";
                            htmlString += "<a href='#' class='display-inline-block text-default text-semibold letter-icon-title'>" + rowObject.TICKET_STATUS_NAME + "</a>";
                            if (Number(rowObject.TICKET_STATUS_ID) == enmTicketStatus.Rejected) {
                                htmlString += '<div class="text-semibold"><a onclick="fnShowRejectReasonDesc(\'' + rowObject.ID + '\');return false;" href="#">[ View Reject Reason ]</a></div>';
                            }
                            htmlString += "</div>";

                            return htmlString;
                        }
                    },
                    {
                        width: 50, editable: false,
                        align: EnumColumnsAlignment.Center,
                        formatter: function (cellvalue, options, rowObject) {
                            var bIsActive = rowObject.IS_ACTIVE;
                            var htmlString = '';
                            if (bIsActive) {
                                htmlString += "<i class='icon-checkmark-circle text-success position-left'></i>";
                            }
                            else {
                                htmlString += "<i class='icon-cancel-circle2 text-warning position-left'></i>";
                            }
                            return htmlString;
                        }
                    },
                    {
                        name: ConstantsNames.CreatedDate,
                        width: 50, editable: false,
                        align: EnumColumnsAlignment.Center,
                        formatter: 'date', formatoptions: { srcformat: 'U', newformat: 'd/m/Y' }
                    }
            ];

            RenderGridView(sCaption, oArrColumnNames, sBindDataUrl, '', '', '', oArrColsModel, oArrGridContextMenu, false, false, false, table.id, pager.id, true, false, true);
            $("#" + table.id).bind('jqGridLoadComplete.jqGrid', function (e, data) {
                $("#" + table.id).jqGrid('hideCol', 'cb'); //hide checkbox

                $(window).bind('resize', function () {
                    $("#" + table.id).setGridWidth(Math.round($(".fakeWidth").width(), true));
                }).trigger('resize');


                $("#" + table.id).setGridWidth(Math.round($(".fakeWidth").width(), true)).trigger('resize');

                $("#dvTickets").show();
                HideLoader();
            });
        }

        function fnGoToTicketDetails(nTicketID) {

            var vTicketID = -99;
            if (nTicketID != null && nTicketID != undefined && nTicketID != -99) {
                vTicketID = nTicketID;
            }
            else {
                var gdTicket = $('#' + sGridViewSelector);
                vTicketID = gdTicket.jqGrid('getGridParam', 'selrow');
            }
            var link = '@Url.Action("TicketDetails", "Tickets", new { nTicketID = "replace" })';
            link = link.replace("replace", vTicketID);

            window.location.href = link;
        }

        function fnFillTicketStatus() {
            //TODO:: option add 'ALL'

            FillDropDownRoot('@Url.Action("JGetAllTicketStatus", "Common")', 'POST', false, 'ddlTicketStatus', 'ID', 'Name', '@TicketsResx.SelectStatus', ' ', [],
                function () {
                    //Success Function
                    $("#ddlTicketStatus").select2({ width: '100%' });
                },
                function () {
                    //Error
                })
        }

        function fnFillApplicationUsers() {
            //TODO:: option add 'ALL'
            FillDropDownRoot('@Url.Action("JGetAllApplicationUsers", "Users")', 'POST', false, 'ddlParticipantUser', 'ID', 'FULL_NAME', '@TicketsResx.SelectUser', ' ', [],
                function () {
                    //Success Function
                    $("#ddlParticipantUser").select2({ width: '100%' });
                },
                function () {
                    //Error
                })
        }

        function fnClearSearch() {
            $("#txtSearchByTicketCode").val("");
            $("#txtSearchByTicketName").val("");
            $('#ddlTicketStatus').val($('#ddlTicketStatus option:first-child').val()).trigger('change');
            $('#ddlParticipantUser').val($('#ddlParticipantUser option:first-child').val()).trigger('change');
        }


        function fnLoadPartialUpdateTicket() {

            var gdTicketList = $('#' + sGridViewSelector);
            var vTicketID = gdTicketList.jqGrid('getGridParam', 'selrow');
            var rowData = gdTicketList.getRowData(vTicketID);

            var sTicketCode = rowData.TICKET_CODE;
            var sTicketName = rowData.TICKET_NAME;
            var sTicketStatusName = rowData.TICKET_STATUS_NAME;
            var nTicketStatusID = rowData.TICKET_STATUS_ID;
            var bIsTicketActive = rowData.IS_ACTIVE;

            var dataToSend = JSON.stringify({
                ID: vTicketID,
                TICKET_CODE: sTicketCode,
                TICKET_NAME: sTicketName,
                TICKET_STATUS_NAME: sTicketStatusName,
                TICKET_STATUS_ID: nTicketStatusID,
                IS_ACTIVE: bIsTicketActive
            });

            $("#dvPopUpWindow").dialog({
                title: '@TicketsResx.UpdateTicket',
                autoOpen: true,
                width: '50%',
                resizable: false,
                modal: true,
                open: function () {
                    $("#dvPopUpWindowContainer").html("");
                    $.ajax({
                        url: '@Url.Action("PartialUpdateTicket", "Tickets")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: dataToSend,
                        async: true,
                        success: function (response) {
                            $("#dvPopUpWindowContainer").html(response);
                        },
                        error: function (response) {
                            $("#dvPopUpWindowContainer").html("");
                        }
                    });
                },
                buttons: [
                     {
                         text: "@Buttons.Update",
                         "class": 'btn btn-sm bg-slate',
                         click: function () {
                             //Update Ticket

                             var bIsShowRejectReason = ($("#ddlUpdateTicketStatus").val() == "3");// Ticket Staus -> Rejected
                             if (bIsShowRejectReason) {
                                 if ($("#txtRejectReason").val() == "") {
                                     ShowStatusBarNotification("Please enter reject reason.", NotificationType.Warning);
                                     return;
                                 }
                             }

                             var gdTicketList = $('#' + sGridViewSelector);
                             var vTicketID = gdTicketList.jqGrid('getGridParam', 'selrow');

                             var vTicketStatusID = $("#ddlUpdateTicketStatus").val();
                             var bIsActive = $("#IS_ACTIVE").prop("checked");
                             var vsRejectReasonDesc = bIsShowRejectReason ? $("#txtRejectReason").val() : "";

                             //int nTicketID,bool bIsActive, int nTicketStatusID,string sRejectReason
                             var dataToSend = JSON.stringify({
                                 nTicketID: vTicketID,
                                 nTicketStatusID: vTicketStatusID,
                                 bIsActive: bIsActive,
                                 sRejectReason: vsRejectReasonDesc
                             });

                             //Update status
                             $.ajax({
                                 url: '@Url.Action("JEditTicket", "Tickets")',
                                 type: 'POST',
                                 contentType: 'application/json',
                                 data: dataToSend,
                                 success: function (result, response) {
                                     if (result.nResult == 1) {
                                         ShowStatusBarNotification(result.sResultMessages, NotificationType.Success);
                                         $("#dvPopUpWindow").dialog("close");
                                         fnBindAllTickets();
                                     }
                                     else {
                                         ShowStatusBarNotification(result.sResultMessages, NotificationType.Error);
                                     }
                                 },
                                 error: function (result, response) {
                                     ShowStatusBarNotification(result.sResultMessages, NotificationType.Error);
                                 }
                             })
                         }
                     },
                     {
                         text: '@Buttons.Cancel',
                         "class": 'btn btn-sm btn-default',
                         click: function () {
                             $(this).dialog("close");
                         }
                     }
                ]
            });
        }


        function fnShowRejectReasonDesc(nTicketID) {
            var gdTicketList = $('#' + sGridViewSelector);
            var rowData = gdTicketList.getRowData(nTicketID);


            if (rowData.TICKET_STATUS_REMARK != "") {
                ShowAlertDialog(rowData.TICKET_STATUS_REMARK, '@Buttons.Close');
            }
        }

        function fnLoadPartialViewTicketInfo() {

            var gdTicketList = $('#' + sGridViewSelector);
            var vTicketID = gdTicketList.jqGrid('getGridParam', 'selrow');
            var rowData = gdTicketList.getRowData(vTicketID);

            var sTicketCode = rowData.TICKET_CODE;
            var sTicketName = rowData.TICKET_NAME;
            var sTicketDescription = rowData.TICKET_DESCRIPTION;
            var sTicketStatusName = rowData.TICKET_STATUS_NAME;
            var nTicketStatusID = rowData.TICKET_STATUS_ID;
            var bIsTicketActive = rowData.IS_ACTIVE;
            var sDefaultImage = rowData.DEFAULT_IMAGE;

            var dataToSend = JSON.stringify({
                ID: vTicketID,
                TICKET_CODE: sTicketCode,
                TICKET_NAME: sTicketName,
                TICKET_DESCRIPTION: sTicketDescription,
                TICKET_STATUS_NAME: sTicketStatusName,
                TICKET_STATUS_ID: nTicketStatusID,
                IS_ACTIVE: bIsTicketActive,
                DEFAULT_IMAGE: sDefaultImage
            });

            $("#dvPopUpWindow").dialog({
                title: '@TicketsResx.TicketInfo',
                autoOpen: true,
                width: '50%',
                resizable: false,
                modal: true,
                open: function () {
                    $("#dvPopUpWindowContainer").html("");
                    $.ajax({
                        url: '@Url.Action("PartialViewTicketInfo", "Tickets")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: dataToSend,
                        async: true,
                        success: function (response) {
                            $("#dvPopUpWindowContainer").html(response);
                        },
                        error: function (response) {
                            $("#dvPopUpWindowContainer").html("");
                        }
                    });
                },
                buttons: [{
                    text: 'Close',
                    "class": 'btn btn-sm btn-default',
                    click: function () {
                        $(this).dialog("close");
                    }
                }]
            });
        }

        function fnLoadPartialAddTicket() {
            $("#dvPopUpWindow").dialog({
                title: '@TicketsResx.AddTicket',
                autoOpen: true,
                width: '50%',
                resizable: false,
                modal: true,
                open: function () {
                    $("#dvPopUpWindowContainer").html("");
                    $.ajax({
                        url: '@Url.Action("PartialAddTicket", "Tickets")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: {},
                        async: true,
                        success: function (response) {
                            $("#dvPopUpWindowContainer").html(response);
                            fnAddTicketValidateInitialization("frmAddTicket");

                            //dialog select2 textbox focus issue
                            if ($.ui && $.ui.dialog && $.ui.dialog.prototype._allowInteraction) {
                                var ui_dialog_interaction = $.ui.dialog.prototype._allowInteraction;
                                $.ui.dialog.prototype._allowInteraction = function (e) {
                                    if ($(e.target).closest('.select2-dropdown').length) return true;
                                    return ui_dialog_interaction.apply(this, arguments);
                                };
                            }
                        },
                        error: function (response) {
                            $("#dvPopUpWindowContainer").html("");
                        }
                    });


                },
                buttons: [
                     {
                         text: "@Buttons.Save",
                         "class": 'btn btn-sm bg-slate',
                         click: function () {
                             fnSaveTicket();
                         }
                     },
                     {
                         text: '@Buttons.Cancel',
                         "class": 'btn btn-sm btn-default',
                         click: function () {
                             $(this).dialog("close");
                         }
                     }
                ]
            });
        }

        function fnSaveTicket() {
            if (!$("#frmAddTicket").valid()) {
                return false;
            }

            var data = new FormData();
            var files = $("#fuTicketImage").get(0).files;

            if (files.length > 0) {

                var sizeAllowed = '@System.Configuration.ConfigurationManager.AppSettings["DefaultFileSize"]'; // 1024 kb
                var nUploadedSize = fnCheckFileSize('fuTicketImage');
                if (Number(nUploadedSize) > Number(sizeAllowed)) {
                    ShowStatusBarNotification("@TicketsResx.AllowedFileSize", NotificationType.Warning);
                    return false;
                }

                var extension = $("#fuTicketImage").val().split('.').pop().toUpperCase();
                var bIsInValidExt = fnIsValidFileExtension(extension);
                if (bIsInValidExt) {
                    ShowStatusBarNotification("@TicketsResx.InvalidFileFormat", NotificationType.Warning);
                    return false;
                }
            }

            var formData = $("#frmAddTicket").serializeArray();
            data.append("TicketImage", files[0]);
            $.each(formData, function (key, input) {
                data.append(input.name, input.value);
            });

            $.ajax({
                url: '@Url.Action("JInserTicket", "Tickets")',
                type: "POST",
                processData: false,
                data: data,
                contentType: false,
                success: function (result, response) {
                    if (result != null || result != '') {
                        if (result.nResult == 1) {
                            ShowStatusBarNotification(result.sResultMessages, NotificationType.Success);
                            $("#dvPopUpWindow").dialog("close");
                            fnBindAllTickets();
                        }
                        else {
                            ShowStatusBarNotification(result.sResultMessages, NotificationType.Error);
                        }
                    }
                    else {
                        ShowStatusBarNotification("@CommonResx.AnErrorHasBeenOccured", NotificationType.Error);
                    }
                },
                error: function (er) { $("#dvPopUpWindow").dialog("close"); }

            });
        }

        function fnIsValidFileExtension(sExtension) {
            var bIsInValidExt = false;
            if (sExtension != "PNG" && sExtension != "JPG" && sExtension != "JPEG") {
                bIsInValidExt = true;
            }
            return bIsInValidExt;
        }

        function fnCheckFileSize(fileid) {
            var fileSize = 0;
            try {
                fileSize = $("#" + fileid)[0].files[0].size //size in bytes
                fileSize = fileSize / 1024; //size in kb
            }
            catch (e) {
                fileSize = 0;
                console.log(ex);
            }
            return fileSize;
        }

        function fnAddTicketValidateInitialization(sFormID) {
            jQuery.validator.addMethod("dropDownValidator", function (value, element, param) {
                return this.optional(element) || value != param;
            }, "Please choose a value!");

            debugger;
            var validator = $('#' + sFormID).validate({
                errorElement: 'div',
                errorClass: 'validation-error-label',
                focusInvalid: true,
                ignore: "",
                rules: {
                    TICKET_NAME: {
                        required: true
                    },
                    TICKET_DESCRIPTION: {
                        required: true
                    },
                    MobileParticipantId: {
                        dropDownValidator: "-99"
                    },
                },
                messages: {
                    TICKET_NAME: "@CommonResx.ThisFieldIsRequired",
                    TICKET_DESCRIPTION: "@CommonResx.ThisFieldIsRequired",
                    MobileParticipantId: "@CommonResx.ThisFieldIsRequired",
                },
                highlight: function (e) {
                    $(e).closest('.error-placement').removeClass('has-info').addClass('has-error');
                },
                success: function (e) {
                    $(e).closest('.error-placement').removeClass('has-error');
                    $(e).remove();
                },
                errorPlacement: function (error, element) {
                    // Styled checkboxes, radios, bootstrap switch
                    if (element.parents('div').hasClass("checker") || element.parents('div').hasClass("choice") || element.parent().hasClass('bootstrap-switch-container')) {
                        if (element.parents('label').hasClass('checkbox-inline') || element.parents('label').hasClass('radio-inline')) {
                            error.appendTo(element.parent().parent().parent().parent());
                        }
                        else {
                            error.appendTo(element.parent().parent().parent().parent().parent());
                        }
                    }

                        // Unstyled checkboxes, radios
                    else if (element.parents('div').hasClass('checkbox') || element.parents('div').hasClass('radio')) {
                        error.appendTo(element.parent().parent().parent());
                    }

                        // Input with icons and Select2
                    else if (element.parents('div').hasClass('has-feedback') || element.hasClass('select2-hidden-accessible')) {
                        error.appendTo(element.parent());
                    }

                        // Inline checkboxes, radios
                    else if (element.parents('label').hasClass('checkbox-inline') || element.parents('label').hasClass('radio-inline')) {
                        error.appendTo(element.parent().parent());
                    }

                        // Input group, styled file input
                    else if (element.parent().hasClass('uploader') || element.parents().hasClass('input-group')) {
                        error.appendTo(element.parent().parent());
                    }

                    else {
                        error.insertAfter(element);
                    }
                },
                submitHandler: function (form) {
                },
                invalidHandler: function (form) {

                }
            });
        }

        //Entry Point
        $(document).ready(function () {
            fnFillTicketStatus();
            fnFillApplicationUsers();
            fnBindAllTickets();
        });
    </script>
}