@using Takamul.Portal.Resources.Portal.Member;
@using Takamul.Portal.Resources.Controls.Buttons;
@using Takamul.Portal.Resources.Common;

@{
    ViewBag.Title = "MembersList";
    Layout = "~/Views/Shared/_GridCommon.cshtml";
}

 <div class="col-lg-12">
    <div class="row">
        <div class="col-md-12">
            <div class="clearfix"></div>
            <form id="frmUserList" class="form-horizontal" action="#" novalidate="novalidate" enctype="multipart/form-data">
                <div class="panel panel-white">
                    <div class="panel-heading">
                        <h6 class="panel-title"> &nbsp;</h6>
                        <div class="heading-elements">
                            <div class="col-md-12">
                                <div class="pull-right content-group-sm">
                                    
                                    <div class="col-md-5">
                                        <div class="input-group content-group">

                                            <div class="has-feedback has-feedback-left">
                                                <input type="text" id="txtSearchUser" class="form-control input-xs" placeholder="@MemberResx.SearchMember">
                                                <div class="form-control-feedback">
                                                    <i class="icon-search4 text-muted text-size-base"></i>
                                                </div>

                                            </div>

                                            <div class="input-group-btn">
                                                <button type="submit" onclick="fnBindAllMembers(); return false;" class="btn btn-primary btn-xs">@Buttons.Search</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4 pull-right">
                                        <a title="@MemberResx.AddNewMember" href="#" onclick="fnLoadPartialAddMember();" class="btn btn-primary btn-xs"><i class="icon-add position-left"></i>@MemberResx.AddNewMember</a>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="fakeWidth col-md-12"></div>
                            <div id="dvMembers">
                            </div>
                        </div>
                    </div>
                </div>
            </form>

        </div>
    </div>
</div>

@section InlineScriptsRelated
{
    <script type="text/javascript">
        var enmUserType = { Staff: 3, MobileUser: 4 };
        var sGridViewSelector = "grid-table";
        var sGridViewPagerSelector = "grid-pager";
        function fnBindAllMembers() {
            ShowLoader();
            $("#dvMembers").hide();
            $("#dvMembers").empty();
            var table = document.createElement('table');
            table.id = sGridViewSelector;
            var pager = document.createElement('div');
            pager.id = sGridViewPagerSelector;

            $('#dvMembers').append(table);
            $('#dvMembers').append(pager);

            var ConstantsNames =
                {
                    ID: 'ID',
                    UserFullName: 'FULL_NAME',                  
                    PhoneNumber: 'PHONE_NUMBER',
                    Email: 'EMAIL',
                    Application: 'APPLICATION_NAME',
                    IsBlocked: 'IS_BLOCKED',
                    IsActive: 'IS_ACTIVE',
                    IsOTPVerified: 'IS_OTP_VALIDATED',
                    OTPNumber: 'OTP_NUMBER',
                    CreatedDate: 'CREATED_DATE'
                };
            var sCaption = 'All Members';
            var oArrColumnNames = [
                '',//Hidden Columns Represent ID Int Value               
                '@MemberResx.FullName',
                '@MemberResx.PhoneNumber',
                '@MemberResx.Email',
                '@MemberResx.Application',
                '@MemberResx.IsBlocked',
                '@MemberResx.IsActive',
                '@MemberResx.CreatedDate',
                '@Buttons.Options' // Options
            ];

             
            var vUserSearch = $("#txtSearchUser").val();

            var params = {                 
                'sUserSearch': vUserSearch
            };
            var sBindDataUrl = '@Url.Action("JGetApplicationUsers", "Member")' + '?' + jQuery.param(params);
            //var sBindDataUrl = '@Url.Action("JGetApplicationUsers", "Member")';

            var sAddUrl = "#";
            var sEditUrl = "#";
            var sDeleteUrl = "#";
            var oArrGridContextMenu = [
                                        { MenuTitle: "@Buttons.Options" },
                                        { Caption: "@Buttons.Details", EventName: "fnGoToUserProfile();", RowId: true }
            ];
            var oArrColsModel = [
                    {
                        name: ConstantsNames.ID, editable: false,
                        key: true, hidden: true
                    },
                     
                     {
                         name: ConstantsNames.UserFullName,
                         width: 100, editable: false,
                         align: EnumColumnsAlignment.Center,
                         formatter: function (cellvalue, options, rowObject) {
                             return "<div class='text-semibold'><a onclick='fnGoToUserProfile(" + rowObject.ID + ")' href='#'>" + rowObject.FULL_NAME + "</a></div>";
                         }
                     },                    
                    {
                        name: ConstantsNames.PhoneNumber,
                        width: 50, editable: false,
                        align: EnumColumnsAlignment.Center
                    },
                    {
                        name: ConstantsNames.Email,
                        width: 100, editable: false,
                        align: EnumColumnsAlignment.Center
                    },
                     {
                         name: ConstantsNames.Application,
                         width: 100, editable: false,
                         align: EnumColumnsAlignment.Center
                     },
                    {
                        name: ConstantsNames.IsBlocked,
                        width: 50, editable: false,
                        align: EnumColumnsAlignment.Center,
                        formatter: function (cellvalue, options, rowObject) {
                            var bIsActive = rowObject.IS_BLOCKED;
                            var htmlString = '';
                            if (bIsActive) {
                                htmlString += "<i class='icon-checkmark-circle text-success position-left'></i>";
                            }
                            else {
                                htmlString += "<i class='icon-cancel-circle2 text-warning position-left'></i>";
                            }
                            return htmlString;
                        }
                    },
                    {
                        name: ConstantsNames.IsActive,
                        width: 50, editable: false,
                        align: EnumColumnsAlignment.Center,
                        formatter: function (cellvalue, options, rowObject) {
                            var bIsActive = rowObject.IS_ACTIVE;
                            var htmlString = '';
                            if (bIsActive) {
                                htmlString += "<i class='icon-checkmark-circle text-success position-left'></i>";
                            }
                            else {
                                htmlString += "<i class='icon-cancel-circle2 text-warning position-left'></i>";
                            }
                            return htmlString;
                        }
                    },
                    {
                        name: ConstantsNames.CreatedDate,
                        width: 50, editable: false,
                        align: EnumColumnsAlignment.Center,
                        formatter: 'date', formatoptions: { srcformat: 'U', newformat: 'd/m/Y' }
                    }
            ];

            RenderGridView(sCaption, oArrColumnNames, sBindDataUrl, '', '', '', oArrColsModel, oArrGridContextMenu, false, false, false, table.id, pager.id, true, false, true);
            $("#" + table.id).bind('jqGridLoadComplete.jqGrid', function (e, data) {
                $("#" + table.id).jqGrid('hideCol', 'cb'); //hide checkbox

                $(window).bind('resize', function () {
                    $("#" + table.id).setGridWidth(Math.round($(".fakeWidth").width(), true));
                }).trigger('resize');


                $("#" + table.id).setGridWidth(Math.round($(".fakeWidth").width(), true)).trigger('resize');

                $("#dvMembers").show();
                HideLoader();
            });
        }

        function fnGoToUserProfile(nUserID) {
            debugger;
            var vUserID = -99;
            if (nUserID != null && nUserID != undefined && nUserID != -99) {
                vUserID = nUserID;
            }
            else {
                var gdUser = $('#' + sGridViewSelector);
                vUserID = gdUser.jqGrid('getGridParam', 'selrow');
            }
            var link = '@Url.Action("MemberProfile", "Member", new { nUserID = "replace" })';
            link = link.replace("replace", vUserID);

            window.location.href = link;
        }

        function fnLoadPartialAddMember() {
            $("#dvPopUpWindow").dialog({
                title: '@MemberResx.AddMember',
                autoOpen: true,
                width: '50%',
                resizable: false,
                modal: true,
                open: function () {
                    $("#dvPopUpWindowContainer").html("");
                    $.ajax({
                        url: '@Url.Action("PartialAddMember", "Member")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: {},
                        async: true,
                        success: function (response) {
                            $("#dvPopUpWindowContainer").html(response);
                        },
                        error: function (response) {
                            $("#dvPopUpWindowContainer").html("");
                        }
                    });
                }
            });
        }


        //Entry Point
        $(document).ready(function () {
            fnBindAllMembers();

        });
    </script>
}
